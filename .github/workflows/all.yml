name: CI

on:
    pull_request:
        branches: ['master', 'stable']
    push:
        branches: ['master', 'stable']

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1

            - name: Cache node modules
                uses: actions/cache@v1
                env:
                    cache-name: cache-node-modules
                with:
                    # npm cache files are stored in `~/.npm` on Linux/macOS
                    path: ~/.npm
                    key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                    restore-keys: |
                        ${{ runner.os }}-build-${{ env.cache-name }}-
                        ${{ runner.os }}-build-
                        ${{ runner.os }}-


## START HERE: Need to figure out how to cache node_modules between jobs



            - name: Install dependencies
              run: |
                  npm install -g yarn
                  yarn install

            - name: Check Formatting
              run: |
                  yarn lint
                  yarn format:check

            - name: Verify Dependencies
              run: yarn checkDeps

            - name: Build Packages
              if: ${{ success() }}
              run: yarn build

    test:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
            - name: Jest
              env:
                  CI: true
              run: yarn test --coverage

            - name: Push to Coveralls
              if: ${{ success() }}
              uses: coverallsapp/github-action@v1.1.1
              with:
                  path-to-lcov: ./coverage/lcov.info
                  github-token: ${{ secrets.GITHUB_TOKEN }}

    netlify:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
            - name: Build Storybook
              run: yarn storybook:build

            - name: Build clayui.com
              run: cd clayui.com && yarn build

    stats:
        runs-on: ubuntu-latest
        needs: [build, netlify, test]
        steps:
            - name: Checkout BASE
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.event.pull_request.base.sha }}

            - name: Generate Build Info
              run: yarn genBuildSize

            - name: Clean directory
              if: ${{ success() }}
              run: |
                  git clean -ffdx --exclude /tmp
                  git reset --hard HEAD

            - name: Checkout HEAD
              if: ${{ success() }}
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  clean: false

            - name: Generate Bundle Size Table
              if: ${{ success() }}
              run: |
                  yarn install
                  node ./node_modules/.bin/lerna run --ignore \"clayui.com\" build
                  yarn genBuildSize:compare

            - name: Generate Total Size
              if: ${{ success() }}
              run: yarn run sizeLimit
