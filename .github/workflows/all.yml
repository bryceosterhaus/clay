name: CI

on:
    pull_request:
        branches: ['master-netlify']
        # branches: ['master', 'stable']
    push:
        branches: ['master-netlify']
        # branches: ['master', 'stable']

jobs:
    setup:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
            - name: Install
              run: |
                  npm install -g yarn
                  yarn install
            - uses: actions/upload-artifact@master
              with:
                  name: node_modules
                  path: node_modules

            - name: Formatting
              run: |
                  yarn lint
                  yarn format:check
            - name: Dependencies
              run: yarn checkDeps

            # - name: Build
            #   if: ${{ success() }}
            #   run: yarn build

    test:
        runs-on: ubuntu-latest
        needs: setup
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
            - uses: actions/download-artifact@master
              with:
                  name: node_modules
                  path: node_modules

            - name: Jest
              env:
                  CI: true
              run: yarn test --coverage

            - name: Coveralls
              if: ${{ success() }}
              uses: coverallsapp/github-action@v1.1.1
              with:
                  path-to-lcov: ./coverage/lcov.info
                  github-token: ${{ secrets.GITHUB_TOKEN }}

    stats:
        runs-on: ubuntu-latest
        needs: setup
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
            - uses: actions/download-artifact@master
              with:
                  name: node_modules
                  path: node_modules

            - name: Checkout BASE
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.event.pull_request.base.sha }}

            - name: Generate Build Info
              run: yarn genBuildSize

            - name: Clean directory
              if: ${{ success() }}
              run: |
                  git clean -ffdx --exclude /tmp
                  git reset --hard HEAD
            - name: Checkout HEAD
              if: ${{ success() }}
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  clean: false

            - name: Generate Bundle Size Table
              if: ${{ success() }}
              run: |
                  yarn install
                  node ./node_modules/.bin/lerna run --ignore \"clayui.com\" build
                  yarn genBuildSize:compare
            - name: Generate Total Size
              if: ${{ success() }}
              run: yarn run sizeLimit

    netlify:
        runs-on: ubuntu-latest
        needs: [setup, test]
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
            - uses: actions/download-artifact@master
              with:
                  name: node_modules
                  path: node_modules

            - name: Fetch and Diff
              id: diff
              run: |
                  git fetch --no-tags --depth=1 origin ${{ github.event.pull_request.base.sha }}
                  echo "##[set-output name=storybook;]$(git diff --exit-code ${{ github.event.pull_request.base.sha }} '**/stories*' '**/src*')"
                  echo "##[set-output name=clayui;]$(git diff --exit-code ${{ github.event.pull_request.base.sha }} clayui.com '**/*.mdx' '**/docs*')"

            - name: Build Storybook
              if: ${{ steps.diff.outputs.storybook }}
              run: echo "run"

            - name: Build clayui
              if: ${{ steps.diff.outputs.clayui }}
              run: echo "run"
